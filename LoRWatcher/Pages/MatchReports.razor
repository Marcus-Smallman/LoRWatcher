@page "/matchreports"

@using LoRWatcher.Stores
@using LoRWatcher.Caches
@using System.Threading;
@inject IWatcherDataStore watcherDataStore

@if (matchReports == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1><b>@matchReports.First().PlayerName</b></h1>

    <br />

    <h4>Total Wins: @matchReports.Where(mr => mr.Result == true).Count()</h4>
    <h4>Total Losses: @matchReports.Where(mr => mr.Result == false).Count()</h4>

    <br />

    <table class="table">
        <thead>
            <tr>
                <th>Finish Time</th>
                <th>Opponent Name</th>
                <th>Result</th>
                <th>Player Deck Code</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var matchReport in matchReports)
            {
                var bgColour = matchReport.Result ? "text-primary" : "text-danger";

                var timeSince = string.Empty;
                TimeSpan timeSinceTime = DateTime.UtcNow.Subtract(matchReport.FinishTime.UtcDateTime);
                if (timeSinceTime.TotalHours < 1)
                {
                    timeSince = string.Format("{0} minute(s) ago", (int)timeSinceTime.TotalMinutes);
                }
                else if (timeSinceTime.TotalDays < 1)
                {
                    timeSince = string.Format("{0} hour(s) ago", (int)timeSinceTime.TotalHours);
                }
                else
                {
                    timeSince = string.Format("{0} day(s) ago", (int)timeSinceTime.TotalDays);
                }

                <tr class="@bgColour">
                    <td>@timeSince</td>
                    <td>@matchReport.OpponentName</td>
                    @if (matchReport.Result == true)
                    {
                        <td>Win</td>
                    }
                    else
                    {
                        <td>Loss</td>
                    }
                    <td>@matchReport.PlayerDeckCode</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    IEnumerable<MatchReport> matchReports;

    protected override async Task OnInitializedAsync()
    {
        matchReports = await watcherDataStore.GetMatchReportsAsync(CancellationToken.None);
    }
}
